1. 어플의 생명주기
    (1) onCreate: 버튼에 클릭 리스너 달기 / 필요한 시스템매니저 선언을 하고 리스너 객체 생성하기
        - 기존의 구상의 경우 onCreate 에서 1차적인 조건 검사를 하고 거기에 부합하지 않는 상황이 발생 할 경우(예: 권한이 거부됨) dialog로 경고를 준 후 앱을 종료시킬 예정이었지만 앱이 crash 되어 변경하게 되었습니다.
        - 환경설정의 경우 세밀한 조절이 필요 해 보입니다.



    (2) onStart: 동작에 필요한 정보들 체크
        1. 권한: 권한이 없을 경우 화면에 아무것도 뜨지 않음
        2. 유심의 유무 체크: 유심이 없을 경우 경고 문구 등장 후 어플 종료
        3. 위치서비스 제공 유무 체크: 위치서비스를 제공받지 못할 경우 어플 종료
        4. 통신 상태 체크: 핸드폰이 로밍 상태인지, 비행기모드인지, 혹은 받을 수 없는 상태인지 체크. 만약 해당 조건일 경우 화면에는 아무것도 뜨지 않음



    (3) onResume: 이전 생명 주기에서 체크한 정보들이 유효한 경우 네트워크 측정을 바로 시작하고, 아닐 경우 화면에 아무것도 띄우지 않습니다.
        -> 권한 변경 문제의 경우 해당 어플리케이션을 나가야지만 변경할 수 있는 것임을 전제합니다.
        -> 예외: 화면에 액티비티가 떠 있는 상태에서 상태바를 내려 변경하는 경우: 데이터 상태 변경 / 위치 상태 변경 / 비핼기모드
            -> 해당 조건들의 경우에는 리스너에서 제공하는 실시간 감시 콜백 함수를 사용해 만약 데이터를 가져오지 못하는 경우 아무것도 화면에 뜨지 않게 조정.
        -> 주기적인 작업이 필요할 때 thread를 사용해야 할 것 같습니다.



    (4) onPause: 해당 액티비티가 화면에서 사라졌을 경우 측정을 중단함. 만약 돌아갈 경우 onResume 에서 권한을 확인하기 때문에 큰 문제는 없을 것으로 보임.


    (5) onStop, onDestroy: 해당 어플을 종료

2. 서비스 제공
    - application 형태보다는 library 형태로 오픈소스 형태로 정보를 제공
    - global application 에서 보낼 데이터들을 단일 변수들로 각각 데이터들을 업데이트 한 후 thread 로 시간마다 저장되어 있는 변수들 값을 class 형태로 전달 하면 어떨까?
    - 각각의 데이터를 얻은 시간 정보를 저장하되, sigmoid 등의 함수로 신뢰성을 전달하는 함수를 만들면 좋을 것 같다.
    - 각각의 데이터는 5초 이하의 주기를 설정해